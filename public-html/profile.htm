<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="./service/apiService.js"></script>
    <script src="./service/dialog.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background: #f5f6fa;
        }

        .container {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .btn-back {
            background: none;
            border: none;
            color: #3498db;
            cursor: pointer;
            font-size: 1.2rem;
            padding: 0.5rem;
            transition: color 0.2s;
        }

        .btn-back:hover {
            color: #2980b9;
        }

        /* Gear Icon and Dropdown Styles */
        .gear-menu {
            position: relative;
        }

        .gear-icon {
            cursor: pointer;
            padding: 10px;
            font-size: 1.2rem;
            color: #2c3e50;
        }

        .gear-icon:hover {
            color: #3498db;
        }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            min-width: 220px;
            display: none;
            z-index: 1000;
            cursor: pointer;
        }

        .dropdown-menu.show {
            display: block;
        }

        .dropdown-menu a {
            display: block;
            padding: 12px 20px;
            color: #2c3e50;
            text-decoration: none;
            transition: background-color 0.2s;
        }

        .dropdown-menu a:hover {
            background-color: #f5f6fa;
        }

        .dropdown-menu a i {
            margin-right: 10px;
            width: 20px;
        }

        /* Rest of your existing styles */
        .profile-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-top: 20px;
        }

        .profile-header {
            display: flex;
            align-items: center;
            margin-bottom: 30px;
        }

        .profile-avatar {
            width: 100px;
            height: 100px;
            background: #3498db;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 20px;
        }

        .profile-avatar i {
            font-size: 40px;
            color: white;
        }

        .profile-title h2 {
            color: #2c3e50;
            margin-bottom: 5px;
        }

        .profile-title p {
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        .profile-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }

        .info-group {
            margin-bottom: 20px;
        }

        .info-label {
            color: #7f8c8d;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .info-value {
            color: #2c3e50;
            font-size: 1rem;
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }

        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            text-transform: uppercase;
        }

        .badge-admin {
            background-color: #e74c3c;
            color: white;
        }

        .badge-user {
            background-color: #3498db;
            color: white;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .profile-header {
                flex-direction: column;
                text-align: center;
            }

            .profile-avatar {
                margin: 0 auto 20px;
            }

            .profile-info {
                grid-template-columns: 1fr;
            }
        }

        .profile-actions {
            margin-top: 20px;
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .profile-actions button {
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            border: none;
            font-size: 0.9rem;
            transition: all 0.2s;
        }

        .profile-actions .btn-refresh {
            background: #f8f9fa;
            color: #2c3e50;
            border: 1px solid #ddd;
        }

        .profile-actions .btn-save {
            background: #3498db;
            color: white;
        }

        .profile-actions button:hover {
            opacity: 0.9;
        }

        .info-value input {
            width: 100%;
            padding: 8px 0;
            border: none;
            border-bottom: 1px solid #3498db;
            font-size: 1rem;
            color: #2c3e50;
            background: transparent;
        }

        .info-value input:focus {
            outline: none;
            border-bottom-color: #2980b9;
        }

        .info-value.editable {
            padding: 0;
        }

        /* Disable fields that shouldn't be editable */
        .info-value.non-editable input {
            background: #f8f9fa;
            cursor: not-allowed;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="header">
            <div style="display: flex; align-items: center; gap: 1rem;">
                <button class="btn-back" onclick="goBack()">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <h1>Profile</h1>
            </div>
            <div class="gear-menu">
                <i class="fa-solid fa-gear gear-icon" onclick="toggleDropdown()"></i>
                <div class="dropdown-menu">
                    <a onclick="editClick()">
                        <i class="fas fa-user-edit"></i>
                        Edit Profile
                    </a>
                    <a onclick="changePassword()">
                        <i class="fas fa-key"></i>
                        Change Password
                    </a>
                </div>
            </div>
        </div>

        <div class="profile-card">
            <div class="profile-header">
                <div class="profile-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <div class="profile-title">
                    <h2 id="fullnameHeader">Loading...</h2>
                    <p id="roleHeader"></p>
                </div>
            </div>


            <div class="profile-info">
                <div class="info-group">
                    <div class="info-label">User ID</div>
                    <div class="info-value non-editable" id="userId">Loading...</div>
                </div>

                <div class="info-group">
                    <div class="info-label">Username</div>
                    <div class="info-value" id="username">Loading...</div>
                </div>

                <div class="info-group">
                    <div class="info-label">Full Name</div>
                    <div class="info-value" id="fullname">Loading...</div>
                </div>

                <div class="info-group">
                    <div class="info-label">Email</div>
                    <div class="info-value" id="email">Loading...</div>
                </div>

                <div class="info-group">
                    <div class="info-label">Created At</div>
                    <div class="info-value non-editable" id="createdAt">Loading...</div>
                </div>
            </div>
            <div class="profile-actions" id="profileActions" style="visibility: hidden;">
                <button class="btn-refresh" onclick="handleRefresh()">
                    <i class="fa-solid fa-rotate"></i> Refresh
                </button>
                <button class="btn-save" onclick="handleSave()">
                    <i class="fa-solid fa-floppy-disk"></i> Save
                </button>
            </div>
        </div>
    </div>

    <script>
        let isEditing = false;
        function checkAuth() {
            const token = localStorage.getItem('access_token');
            if (!token) {
                window.location.href = './login.htm';
            }
            loadUserInfo();
        }

        async function loadUserInfo() {
            try {
                // Store original data
                originalData = {
                    userId: localStorage.getItem('user_id'),
                    username: localStorage.getItem('username'),
                    fullname: localStorage.getItem('fullname'),
                    email: localStorage.getItem('mail'),
                    createdAt: localStorage.getItem('created_at'),
                    role: localStorage.getItem('role')
                };

                // Update header
                document.getElementById('fullnameHeader').textContent = originalData.fullname;
                document.getElementById('roleHeader').innerHTML = `
                    <span class="badge badge-${originalData.role.toLowerCase()}">${originalData.role}</span>
                `;

                // Update info fields
                updateDisplayValues();
            } catch (error) {
                console.error('Error loading user info:', error);
            }
        }

        function goBack() {
            window.location.href = './index.htm';
        }

        function toggleDropdown() {
            const dropdown = document.querySelector('.dropdown-menu');
            dropdown.classList.toggle('show');
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function (event) {
            const gearMenu = document.querySelector('.gear-menu');
            const isClickInside = gearMenu.contains(event.target);

            if (!isClickInside) {
                const dropdown = document.querySelector('.dropdown-menu');
                dropdown.classList.remove('show');
            }
        });

        function updateDisplayValues() {
            const fields = ['userId', 'username', 'fullname', 'email', 'createdAt'];
            fields.forEach(field => {
                const element = document.getElementById(field);
                if (isEditing && !element.classList.contains('non-editable')) {
                    element.innerHTML = `<input type="text" value="${originalData[field]}">`;
                    element.classList.add('editable');
                } else {
                    element.textContent = originalData[field];
                    element.classList.remove('editable');
                }
            });
        }

        function editClick() {
            isEditing = !isEditing;
            document.getElementById("profileActions").style.visibility = isEditing ? "visible" : "hidden";
            updateDisplayValues();

            // Hide dropdown after clicking
            const dropdown = document.querySelector('.dropdown-menu');
            dropdown.classList.remove('show');
        }

        function handleRefresh() {
            loadUserInfo();
        }

        async function handleSave() {
            try {
                const configResponse = await fetch('./config/config.json');
                const config = await configResponse.json();
                const updatedData = {
                    username: document.querySelector('#username input')?.value || originalData.username,
                    fullName: document.querySelector('#fullname input')?.value || originalData.fullname,
                    email: document.querySelector('#email input')?.value || originalData.email
                };
                const userId = localStorage.getItem('user_id');
                const token = localStorage.getItem('access_token');

                const response = await apiService.put(`http://${config.ip}:8081/api/v1/auth/change-profile?userId=${userId}`, updatedData, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (response.data.status == 200) {
                    localStorage.setItem('username', updatedData.username);
                    localStorage.setItem('fullname', updatedData.fullName);
                    localStorage.setItem('mail', updatedData.email);

                    // Reset edit mode and reload info
                    isEditing = false;
                    loadUserInfo();
                    document.getElementById("profileActions").style.visibility = "hidden";
                    enhancedDialog.showMessage({
                        title: "Message",
                        message: response.data.message
                    });
                }
            } catch (error) {
                console.error('Error updating profile:', error);
            }
        }
        function changePassword() {
            const userId = localStorage.getItem('user_id');
            window.location.href = './change-password.htm?userId=' + userId;
        }

        document.addEventListener('DOMContentLoaded', checkAuth);
    </script>
</body>

</html>